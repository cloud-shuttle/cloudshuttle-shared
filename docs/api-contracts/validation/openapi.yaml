openapi: 3.0.3
info:
  title: CloudShuttle Validation API
  version: 0.2.0
  description: |
    Input validation and sanitization API for CloudShuttle services.

    ## Features
    - Input sanitization (HTML, SQL, filenames, URLs)
    - Business rule validation
    - Schema validation
    - Security filtering
    - Unicode normalization

  contact:
    name: CloudShuttle Team
    email: team@cloudshuttle.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.cloudshuttle.com/validation
    description: Production server
  - url: https://staging-api.cloudshuttle.com/validation
    description: Staging server
  - url: http://localhost:8082/validation
    description: Local development server

security:
  - BearerAuth: []

paths:
  /health:
    get:
      summary: Validation service health check
      description: Check if the validation service is operational
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceHealth'
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sanitize/html:
    post:
      summary: Sanitize HTML input
      description: Remove potentially dangerous HTML tags and attributes
      tags:
        - Sanitization
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SanitizationRequest'
      responses:
        '200':
          description: HTML sanitized successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanitizationResult'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sanitize/sql:
    post:
      summary: Sanitize SQL input
      description: Escape and sanitize SQL input to prevent injection attacks
      tags:
        - Sanitization
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SanitizationRequest'
      responses:
        '200':
          description: SQL input sanitized successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanitizationResult'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sanitize/filename:
    post:
      summary: Sanitize filename
      description: Remove dangerous characters and path traversal attempts from filenames
      tags:
        - Sanitization
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SanitizationRequest'
      responses:
        '200':
          description: Filename sanitized successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanitizationResult'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /sanitize/url:
    post:
      summary: Sanitize URL
      description: Validate and normalize URLs, remove dangerous protocols
      tags:
        - Sanitization
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SanitizationRequest'
      responses:
        '200':
          description: URL sanitized successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SanitizationResult'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /validate:
    post:
      summary: Validate data against schema
      description: Validate input data against JSON schema or business rules
      tags:
        - Validation
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
      responses:
        '200':
          description: Validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResult'
        '400':
          description: Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /normalize/unicode:
    post:
      summary: Unicode normalization
      description: Normalize Unicode text to prevent encoding attacks
      tags:
        - Normalization
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NormalizationRequest'
      responses:
        '200':
          description: Text normalized successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NormalizationResult'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /bulk/sanitize:
    post:
      summary: Bulk sanitization
      description: Sanitize multiple inputs of different types in a single request
      tags:
        - Sanitization
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkSanitizationRequest'
      responses:
        '200':
          description: Bulk sanitization completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkSanitizationResult'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /rules:
    get:
      summary: Get validation rules
      description: Retrieve available validation rules and sanitization options
      tags:
        - Configuration
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Validation rules retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationRules'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /stats:
    get:
      summary: Get validation statistics
      description: Retrieve validation and sanitization operation statistics
      tags:
        - Monitoring
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Statistics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationStats'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT access token obtained from authentication service

  schemas:
    ServiceHealth:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        metrics:
          $ref: '#/components/schemas/HealthMetrics'
      required:
        - status
        - message
        - timestamp

    HealthMetrics:
      type: object
      properties:
        requests_processed:
          type: integer
          description: Total requests processed
        average_response_time_ms:
          type: number
          description: Average response time in milliseconds
        active_validations:
          type: integer
          description: Currently active validation operations
        cache_hit_rate_percent:
          type: number
          description: Validation rule cache hit rate
      required:
        - requests_processed
        - average_response_time_ms

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: Machine-readable error code
            message:
              type: string
              description: Human-readable error message
            details:
              type: object
              description: Additional error details
            retryable:
              type: boolean
              description: Whether the operation can be retried
          required:
            - code
            - message
      required:
        - error

    SanitizationRequest:
      type: object
      properties:
        input:
          type: string
          description: Input text to sanitize
        options:
          $ref: '#/components/schemas/SanitizationOptions'
          description: Sanitization options
      required:
        - input

    SanitizationOptions:
      type: object
      properties:
        allow_html_tags:
          type: array
          items:
            type: string
          description: Allowed HTML tags (for HTML sanitization)
        allow_attributes:
          type: array
          items:
            type: string
          description: Allowed HTML attributes (for HTML sanitization)
        escape_quotes:
          type: boolean
          description: Whether to escape quotes (for SQL sanitization)
          default: true
        max_length:
          type: integer
          description: Maximum allowed length
        preserve_unicode:
          type: boolean
          description: Whether to preserve Unicode characters
          default: true
      required: []

    SanitizationResult:
      type: object
      properties:
        original:
          type: string
          description: Original input
        sanitized:
          type: string
          description: Sanitized output
        changes_made:
          type: array
          items:
            type: string
          description: Description of changes made
        warnings:
          type: array
          items:
            type: string
          description: Non-critical warnings
        processing_time_ms:
          type: number
          description: Processing time in milliseconds
        security_score:
          type: integer
          minimum: 0
          maximum: 100
          description: Security safety score (0-100)
      required:
        - original
        - sanitized
        - changes_made
        - processing_time_ms

    ValidationRequest:
      type: object
      properties:
        data:
          description: Data to validate (any JSON value)
        schema:
          oneOf:
            - $ref: '#/components/schemas/JsonSchema'
            - type: string
              description: Schema name or identifier
          description: Validation schema or schema reference
        rules:
          type: array
          items:
            $ref: '#/components/schemas/ValidationRule'
          description: Additional validation rules
      required:
        - data

    JsonSchema:
      type: object
      description: JSON Schema for validation
      additionalProperties: true

    ValidationRule:
      type: object
      properties:
        type:
          type: string
          enum: [required, format, range, pattern, custom]
          description: Rule type
        field:
          type: string
          description: Field path to validate
        parameters:
          type: object
          description: Rule-specific parameters
        message:
          type: string
          description: Custom error message
      required:
        - type
        - field

    ValidationResult:
      type: object
      properties:
        valid:
          type: boolean
          description: Whether validation passed
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          description: Validation errors (empty if valid)
        warnings:
          type: array
          items:
            type: string
          description: Non-blocking validation warnings
        processing_time_ms:
          type: number
          description: Validation processing time
        schema_version:
          type: string
          description: Schema version used for validation
      required:
        - valid
        - errors
        - processing_time_ms

    ValidationError:
      type: object
      properties:
        field:
          type: string
          description: Field path where error occurred
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        value:
          description: Actual value that failed validation
        expected:
          description: Expected value or format
      required:
        - field
        - code
        - message

    NormalizationRequest:
      type: object
      properties:
        text:
          type: string
          description: Text to normalize
        form:
          type: string
          enum: [NFC, NFD, NFKC, NFKD]
          description: Unicode normalization form
          default: NFC
        preserve_control_chars:
          type: boolean
          description: Whether to preserve control characters
          default: false
      required:
        - text

    NormalizationResult:
      type: object
      properties:
        original:
          type: string
          description: Original text
        normalized:
          type: string
          description: Normalized text
        form_used:
          type: string
          description: Normalization form applied
        characters_changed:
          type: integer
          description: Number of characters that were changed
        processing_time_ms:
          type: number
          description: Processing time in milliseconds
      required:
        - original
        - normalized
        - form_used
        - characters_changed
        - processing_time_ms

    BulkSanitizationRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/BulkSanitizationItem'
          description: Items to sanitize
          maxItems: 100
        parallel_processing:
          type: boolean
          description: Whether to process items in parallel
          default: true
      required:
        - items

    BulkSanitizationItem:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this item
        type:
          type: string
          enum: [html, sql, filename, url]
          description: Type of sanitization to apply
        input:
          type: string
          description: Input text to sanitize
        options:
          $ref: '#/components/schemas/SanitizationOptions'
          description: Sanitization options
      required:
        - id
        - type
        - input

    BulkSanitizationResult:
      type: object
      properties:
        total_items:
          type: integer
          description: Total number of items processed
        successful_items:
          type: integer
          description: Number of items processed successfully
        failed_items:
          type: integer
          description: Number of items that failed processing
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkSanitizationItemResult'
          description: Individual item results
        total_processing_time_ms:
          type: number
          description: Total processing time for all items
        parallel_processed:
          type: boolean
          description: Whether items were processed in parallel
      required:
        - total_items
        - successful_items
        - failed_items
        - results
        - total_processing_time_ms

    BulkSanitizationItemResult:
      type: object
      properties:
        id:
          type: string
          description: Item identifier
        success:
          type: boolean
          description: Whether sanitization succeeded
        result:
          $ref: '#/components/schemas/SanitizationResult'
          description: Sanitization result (if successful)
        error:
          type: string
          description: Error message (if failed)
        processing_time_ms:
          type: number
          description: Processing time for this item
      required:
        - id
        - success
        - processing_time_ms

    ValidationRules:
      type: object
      properties:
        sanitization_rules:
          type: object
          properties:
            html:
              $ref: '#/components/schemas/SanitizationRule'
            sql:
              $ref: '#/components/schemas/SanitizationRule'
            filename:
              $ref: '#/components/schemas/SanitizationRule'
            url:
              $ref: '#/components/schemas/SanitizationRule'
          description: Available sanitization rules
        validation_schemas:
          type: array
          items:
            $ref: '#/components/schemas/SchemaInfo'
          description: Available validation schemas
        normalization_forms:
          type: array
          items:
            type: string
            enum: [NFC, NFD, NFKC, NFKD]
          description: Supported Unicode normalization forms
      required:
        - sanitization_rules

    SanitizationRule:
      type: object
      properties:
        name:
          type: string
          description: Rule name
        description:
          type: string
          description: Rule description
        options:
          $ref: '#/components/schemas/SanitizationOptions'
          description: Default options for this rule
        version:
          type: string
          description: Rule version
      required:
        - name
        - description

    SchemaInfo:
      type: object
      properties:
        name:
          type: string
          description: Schema name
        description:
          type: string
          description: Schema description
        version:
          type: string
          description: Schema version
        fields:
          type: array
          items:
            type: string
          description: Schema field names
      required:
        - name
        - description
        - version

    ValidationStats:
      type: object
      properties:
        uptime_seconds:
          type: integer
          description: Service uptime in seconds
        total_requests:
          type: integer
          description: Total validation requests processed
        requests_by_type:
          type: object
          properties:
            sanitization:
              type: integer
              description: Sanitization requests
            validation:
              type: integer
              description: Schema validation requests
            normalization:
              type: integer
              description: Unicode normalization requests
            bulk:
              type: integer
              description: Bulk operation requests
          description: Request counts by type
        average_response_time_ms:
          type: number
          description: Average response time
        error_rate_percent:
          type: number
          description: Request error rate percentage
        cache_hit_rate_percent:
          type: number
          description: Rule/schema cache hit rate
        active_rules:
          type: integer
          description: Number of active validation rules
      required:
        - uptime_seconds
        - total_requests
        - average_response_time_ms
