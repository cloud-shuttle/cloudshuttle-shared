name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-rust:
    name: Test Rust Libraries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust ${{ matrix.rust }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: cargo test --all-features --verbose

    - name: Run doc tests
      run: cargo test --doc --all-features

    - name: Generate coverage
      if: matrix.rust == 'stable'
      uses: actions-rs/tarpaulin@v0.1
      with:
        args: '--all-features --workspace --out Xml'

    - name: Upload coverage to Codecov
      if: matrix.rust == 'stable'
      uses: codecov/codecov-action@v3
      with:
        file: cobertura.xml

  test-typescript:
    name: Test TypeScript Libraries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18, 20]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd typescript
        npm ci

    - name: Run linting
      run: |
        cd typescript
        npm run lint

    - name: Run TypeScript checks
      run: |
        cd typescript
        npm run type-check

    - name: Run tests
      run: |
        cd typescript
        npm test -- --coverage --watchAll=false

    - name: Build libraries
      run: |
        cd typescript
        npm run build

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./typescript/coverage/lcov.info

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd typescript
        npm ci

    - name: Run integration tests
      run: |
        cargo test --test integration
        cd typescript && npm run test:integration
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test

  audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Run cargo audit
      uses: actions-rs/audit@v1

    - name: Run npm audit
      run: |
        cd typescript
        npm audit --audit-level high
